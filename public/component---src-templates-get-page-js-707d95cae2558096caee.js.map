{"version":3,"sources":["webpack:///./src/templates/GetPage.js","webpack:///./src/components/Popup.js","webpack:///./src/components/PictureLink.js"],"names":["GetPageTemplate","volunteer","volunteerLink","donate","donateLink","className","title","subtitle","link","backgroundImage","GetPage","page","data","meta","frontmatter","body","html","pageQuery","Popup","props","state","showPopup","togglePopup","this","setState","render","children","class","onClick","bind","Component","PictureLink","href","style","textDecoration","background","resolutions","src","alt","size"],"mappings":"8FAAA,kJASaA,GATb,oBAS+B,SAAC,GAAD,IACOC,EADP,EACOA,UACpCC,EAF6B,EAE7BA,cACAC,EAH6B,EAG7BA,OACAC,EAJ6B,EAI7BA,WAJ6B,OAO7B,0BAAMC,UAAU,WACd,6BACA,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEC,MAAM,YACNC,SAAUN,EACVO,KAAMN,EACNO,gBAAgB,+DAGlB,6BAEA,kBAAC,IAAD,CACEH,MAAM,SACNC,SAAUJ,EACVK,KAAMJ,EACNK,gBAAgB,gEAIpB,gCAaWC,UARC,SAAC,GAAD,IAAWC,EAAX,EAAGC,KAAQD,KAAX,OACd,kBAAC,IAAD,CACEE,KAAMF,EAAKG,YAAYD,OAAQ,EAC/BP,MAAOK,EAAKG,YAAYR,QAAS,GAEjC,kBAACN,EAAD,iBAAqBW,EAAKG,YAA1B,CAAuCC,KAAMJ,EAAKK,UAK/C,IAAMC,EAAS,c,mFC9ChBC,G,sBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,WAAW,GAFT,E,4CAKnBC,YAAA,WACEC,KAAKC,SAAS,CACZH,WAAYE,KAAKH,MAAMC,a,EAI3BI,OAAA,WAAU,IACAC,EAAaH,KAAKJ,MAAlBO,SACR,OACE,kBAAC,WAAD,KACE,yBAAKrB,UAAU,YACb,yBAAKsB,MAAM,SAASC,QAASL,KAAKD,YAAYO,KAAKN,OAAnD,0BAKDA,KAAKH,MAAMC,UACV,yBAAKhB,UAAU,iBACb,yBACEA,UAAU,mBACVuB,QAASL,KAAKD,YAAYO,KAAKN,QAEjC,yBAAKlB,UAAU,eACb,kBAAC,IAAD,CAAGsB,MAAM,cAAcC,QAASL,KAAKD,YAAYO,KAAKN,QACrDG,IAGH,O,GAjCQI,cAsCLZ,O,oCC3Cf,2DA0Cea,IAnCK,SAAC,GAMM,IALLzB,EAKI,EALJA,MACAC,EAII,EAJJA,SACAE,EAGI,EAHJA,gBACAD,EAEI,EAFJA,KAEI,IADJH,iBACI,MADQ,GACR,EACxB,OACE,uBAAG2B,KAAMxB,EAAMyB,MAAO,CAACC,eAAgB,SACrC,yBAAK7B,UAAS,wBAA0BA,GACrCI,GACC,kBAAC,IAAD,CACE0B,YAAU,EACVC,YAAY,QACZC,IAAK5B,EACL6B,IAAKhC,EACLiC,KAAK,UAGT,yBAAKlC,UAAU,sBACb,wBAAIA,UAAU,sBAAsBC,GACnCC,GACC,kBAAC,IAAD,CAASF,UAAU,wBAAwBgC,IAAK9B,S","file":"component---src-templates-get-page-js-707d95cae2558096caee.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport PictureLink from '../components/PictureLink'\nimport Layout from '../components/Layout'\nimport './GetPage.css'\nimport Popup from '../components/Popup'\n\n// Export Template for use in CMS preview\nexport const GetPageTemplate = ({\n                                      volunteer,\n  volunteerLink,\n  donate,\n  donateLink\n\n                                    }) => (\n  <main className=\"GetPage\">\n    <br />\n    <div className=\"marginContainer\">\n      <PictureLink\n        title=\"Volunteer\"\n        subtitle={volunteer}\n        link={volunteerLink}\n        backgroundImage='https://ucarecdn.com/a7f36998-7a41-4a63-b0b1-91ef46cd638b/'\n      />\n\n      <br />\n\n      <PictureLink\n        title=\"Donate\"\n        subtitle={donate}\n        link={donateLink}\n        backgroundImage='https://ucarecdn.com/159203d3-881d-4218-baa1-ca4427b48d0d/'\n      />\n    </div>\n\n    <br />\n\n  </main>\n)\n\nconst GetPage = ({ data: { page } }) => (\n  <Layout\n    meta={page.frontmatter.meta || false}\n    title={page.frontmatter.title || false}\n  >\n    <GetPageTemplate {...page.frontmatter} body={page.html} />\n  </Layout>\n)\nexport default GetPage\n\nexport const pageQuery = graphql`\n  query GetPage($id: String!) {\n    page: markdownRemark(id: { eq: $id }) {\n      ...Meta\n      html\n      frontmatter {\n        volunteer\n        volunteerLink\n        donate\n        donateLink\n      }\n    }\n  }\n`\n","import React, { Component, Fragment } from 'react'\nimport { X } from 'react-feather'\n\nimport './Popup.css'\n\nclass Popup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { showPopup: false }\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    })\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <Fragment>\n        <div className=\"taCenter\">\n          <div class=\"Button\" onClick={this.togglePopup.bind(this)}>\n            Click To Launch Popup\n          </div>\n        </div>\n\n        {this.state.showPopup ? (\n          <div className=\"Popup-Overlay\">\n            <div\n              className=\"Popup-Background\"\n              onClick={this.togglePopup.bind(this)}\n            ></div>\n            <div className=\"Popup-Inner\">\n              <X class=\"Popup-Close\" onClick={this.togglePopup.bind(this)} />\n              {children}\n            </div>\n          </div>\n        ) : null}\n      </Fragment>\n    )\n  }\n}\nexport default Popup\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Image from './Image'\nimport Content from './Content'\nimport './PictureLink.css'\n\nconst PictureLink = ({\n                      title,\n                      subtitle,\n                      backgroundImage,\n                      link,\n                      className = ''\n                    }) => {\n  return (\n    <a href={link} style={{textDecoration: \"none\"}} >\n      <div className={`PictureLink relative ${className}`}>\n        {backgroundImage && (\n          <Image\n            background\n            resolutions=\"large\"\n            src={backgroundImage}\n            alt={title}\n            size=\"cover\"\n          />\n        )}\n        <div className=\"container relative\">\n          <h1 className=\"PictureLink--Title\">{title}</h1>\n          {subtitle && (\n            <Content className=\"PictureLink--Subtitle\" src={subtitle} />\n          )}\n        </div>\n      </div>\n    </a>\n  )\n}\n\nPictureLink.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string\n}\n\nexport default PictureLink\n"],"sourceRoot":""}